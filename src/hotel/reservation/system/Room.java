package hotel.reservation.system;

import java.sql.*;
import javax.swing.JOptionPane;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.util.Enumeration;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractButton;
import javax.swing.table.DefaultTableModel;




public final class Room extends javax.swing.JFrame {

    public Room() {
        initComponents();
        Connect();
        Load_room();
        autoID();
        rb_single_bed.setActionCommand("Single bed");
        rb_double_bed.setActionCommand("Double bed");
        rb_queen_bed.setActionCommand("Queen bed");
        rb_king_bed.setActionCommand("King bed");
    }
    
    Connection con; 
    PreparedStatement Pst;
    DefaultTableModel d;
    
    public void Connect()
    {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/hotel_system","root","");
            
            
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Room.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void autoID()
    {
        try {
            Statement s = con.createStatement();
            ResultSet rs = s.executeQuery("select MAX(room_no) from room");
            rs.next();
            rs.getString("MAX(room_no)");
            
            if(rs.getString("MAX(room_no)") == null)
            {
                txt_room_no.setText("R001");
            }
            else
            {
                long id = Long.parseLong(rs.getString("MAX(room_no)").substring(2,rs.getString("MAX(room_no)").length()));
                id++;
                txt_room_no.setText("R"+String.format("%03d",id));
            }
                     
            
        } catch (SQLException ex) {
            Logger.getLogger(Guest.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    public void Load_room() {
    try {
        Pst = con.prepareStatement("SELECT * FROM room");
        ResultSet rs = Pst.executeQuery();

        ResultSetMetaData rsd = rs.getMetaData();
        int c = rsd.getColumnCount();

        d = (DefaultTableModel) table_room.getModel();
        d.setRowCount(0); // Clear existing data

        while (rs.next()) {
            Vector v2 = new Vector();
            for (int i = 1; i <= c; i++) {
                v2.add(rs.getString("room_no"));
                v2.add(rs.getString("floor"));
                v2.add(rs.getString("room_type"));
                v2.add(rs.getInt("price"));
                v2.add(rs.getString("bed_type"));
                v2.add(rs.getString("room_description"));
            }
            d.addRow(v2);
        }
    } catch (SQLException ex) {
        Logger.getLogger(Guest.class.getName()).log(Level.SEVERE, null, ex);
    }
}

    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_group = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txt_room_no = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cmb_floor = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        cmb_room_type = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        rb_single_bed = new javax.swing.JRadioButton();
        rb_double_bed = new javax.swing.JRadioButton();
        rb_king_bed = new javax.swing.JRadioButton();
        rb_queen_bed = new javax.swing.JRadioButton();
        btn_save = new javax.swing.JButton();
        btn_edit = new javax.swing.JButton();
        btn_clear = new javax.swing.JButton();
        btn_delete = new javax.swing.JButton();
        txt_price = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_area_room_description = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_room = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 139, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLabel2.setText("Room Number");

        jLabel3.setText("Floor");

        cmb_floor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Floor 1", "Floor 2", "Floor 3", "Floor 4" }));
        cmb_floor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_floorActionPerformed(evt);
            }
        });

        jLabel4.setText("Room Type");

        cmb_room_type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Standard", "Deluxe", "Suite", "Executive Suit" }));

        jLabel7.setText("Rate/Price");

        jLabel8.setText("Bed Type");

        btn_group.add(rb_single_bed);
        rb_single_bed.setText("Single Bed");
        rb_single_bed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_single_bedActionPerformed(evt);
            }
        });

        btn_group.add(rb_double_bed);
        rb_double_bed.setText("Double Bed");

        btn_group.add(rb_king_bed);
        rb_king_bed.setText("King Bed");

        btn_group.add(rb_queen_bed);
        rb_queen_bed.setText("Queen Bed");

        btn_save.setText("Save");
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });

        btn_edit.setText("Edit");
        btn_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editActionPerformed(evt);
            }
        });

        btn_clear.setText("Clear Form");
        btn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearActionPerformed(evt);
            }
        });

        btn_delete.setText("Delete");
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });

        jLabel5.setText("Room Description");

        txt_area_room_description.setColumns(20);
        txt_area_room_description.setRows(5);
        jScrollPane1.setViewportView(txt_area_room_description);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Room Information");

        table_room.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "room no", "floor", "room type", "price", "bed type", "description"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        table_room.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_roomMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(table_room);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(26, 26, 26)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txt_room_no, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(cmb_room_type, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(cmb_floor, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txt_price, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGap(62, 62, 62))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(24, 24, 24)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(rb_single_bed)
                                                    .addComponent(rb_queen_bed, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(rb_king_bed, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(rb_double_bed)))
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 689, Short.MAX_VALUE)
                                .addGap(24, 24, 24))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn_save, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(btn_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(btn_clear)
                                .addGap(29, 29, 29)
                                .addComponent(btn_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(269, 269, 269)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_room_no, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmb_floor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmb_room_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(rb_single_bed)
                            .addComponent(rb_double_bed))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rb_queen_bed)
                            .addComponent(rb_king_bed))
                        .addGap(22, 22, 22)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_save)
                    .addComponent(btn_edit)
                    .addComponent(btn_clear)
                    .addComponent(btn_delete))
                .addGap(41, 41, 41))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmb_floorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_floorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_floorActionPerformed

    private void rb_single_bedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_single_bedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rb_single_bedActionPerformed

    private void btn_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editActionPerformed
       String room_no,floor,room_type,bed_type,room_description;
            double price;
            room_no = txt_room_no.getText();
            floor = cmb_floor.getSelectedItem().toString();
            room_type = cmb_room_type.getSelectedItem().toString();
            bed_type = btn_group.getSelection().getActionCommand();
            room_description = txt_area_room_description.getText();
            price = Double.parseDouble(txt_price.getText().trim());
           
            
            
            
         try{
            Pst = con.prepareStatement("update room set floor=?,room_type=?,price=?,bed_type=?,room_description=? where room_no = ?");
            
            Pst.setString(1, floor);
            Pst.setString(2, room_type);
            Pst.setDouble(3, price);
            Pst.setString(4, bed_type);
            Pst.setString(5, room_description);
            Pst.setString(6, room_no);

            Pst.executeUpdate();
            JOptionPane.showMessageDialog(this,"Room Edited Successfully");
            
            
            cmb_floor.setSelectedIndex(-1); 
            cmb_room_type.setSelectedIndex(-1);
            txt_price.setText(""); 
            txt_area_room_description.setText(""); 
            btn_group.clearSelection();
            
            autoID();
            Load_room();
            btn_save.setEnabled(true);
            
            
            
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(Room.class.getName()).log(Level.SEVERE, null, ex);
        }
  
    }//GEN-LAST:event_btn_editActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        
           String room_no;
            
            double price;
            room_no = txt_room_no.getText();
            
           
            
         
        try {
            Pst = con.prepareStatement("delete from room where room_no = ?");
           
            Pst.setString(1,room_no);
            
            Pst.executeUpdate();
            JOptionPane.showMessageDialog(this,"Guest Deleted");
            
            cmb_floor.setSelectedIndex(-1); 
            cmb_room_type.setSelectedIndex(-1);
            txt_price.setText(""); 
            txt_area_room_description.setText("");
            autoID();
            Load_room();
            btn_save.setEnabled(true);
            
               
            
        } catch (SQLException ex) {
            Logger.getLogger(Room.class.getName()).log(Level.SEVERE, null, ex);
        }


    
      
       
        
        
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed
        
            
            String room_no,floor,room_type,bed_type,room_description;
            
            double price;
            room_no = txt_room_no.getText();
            floor = cmb_floor.getSelectedItem().toString();
            room_type = cmb_room_type.getSelectedItem().toString();
            bed_type = btn_group.getSelection().getActionCommand();
            room_description = txt_area_room_description.getText();
            price = Double.parseDouble(txt_price.getText().trim());
           
            
         try{
            Pst = con.prepareStatement("INSERT INTO room (room_no, floor, room_type, price, bed_type, room_description) VALUES (?, ?, ?, ?, ?, ?)");
            Pst.setString(1, room_no);
            Pst.setString(2, floor);
            Pst.setString(3, room_type);
            Pst.setDouble(4, price);
            Pst.setString(5, bed_type);
            Pst.setString(6, room_description);

            Pst.executeUpdate();
            JOptionPane.showMessageDialog(this,"Room Added Successfully");
            
            
            cmb_floor.setSelectedIndex(-1); 
            cmb_room_type.setSelectedIndex(-1);
            txt_price.setText(""); 
            txt_area_room_description.setText("");
            autoID();
            Load_room();
            
               
            
        } catch (SQLException ex) {
            Logger.getLogger(Room.class.getName()).log(Level.SEVERE, null, ex);
        }


       
    }//GEN-LAST:event_btn_saveActionPerformed

    private void table_roomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_roomMouseClicked
    
        d = (DefaultTableModel)table_room.getModel();
        int selectIndex = table_room.getSelectedRow();
        
        txt_room_no.setText(d.getValueAt(selectIndex,0).toString());
        cmb_floor.setSelectedItem(d.getValueAt(selectIndex,1).toString());
        cmb_room_type.setSelectedItem(d.getValueAt(selectIndex,2).toString());
        txt_price.setText(Double.toString(Double.parseDouble(d.getValueAt(selectIndex, 3).toString())));
        String bed_type = d.getValueAt(selectIndex, 4).toString(); // Assuming column 5 is the bed_type

// Iterate through the button group and select the matching radio button
        for (Enumeration<AbstractButton> buttons = btn_group.getElements(); buttons.hasMoreElements();) {
        AbstractButton button = buttons.nextElement();
        if (button.getActionCommand().equals(bed_type)) {
        button.setSelected(true);
        break;
       }
    }
       txt_area_room_description.setText(d.getValueAt(selectIndex, 5).toString());


        
        btn_save.setEnabled(false);
       
              
    }//GEN-LAST:event_table_roomMouseClicked

    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearActionPerformed
            cmb_floor.setSelectedIndex(-1); 
            cmb_room_type.setSelectedIndex(-1);
            txt_price.setText(""); 
            txt_area_room_description.setText("");
            autoID();
            Load_room();
    }//GEN-LAST:event_btn_clearActionPerformed
                 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Room.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Room.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Room.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Room.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Room().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_clear;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_edit;
    private javax.swing.ButtonGroup btn_group;
    private javax.swing.JButton btn_save;
    private javax.swing.JComboBox<String> cmb_floor;
    private javax.swing.JComboBox<String> cmb_room_type;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton rb_double_bed;
    private javax.swing.JRadioButton rb_king_bed;
    private javax.swing.JRadioButton rb_queen_bed;
    private javax.swing.JRadioButton rb_single_bed;
    private javax.swing.JTable table_room;
    private javax.swing.JTextArea txt_area_room_description;
    private javax.swing.JTextField txt_price;
    private javax.swing.JTextField txt_room_no;
    // End of variables declaration//GEN-END:variables
}
